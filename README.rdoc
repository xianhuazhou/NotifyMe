== Introduction

NotifyMe is a script running as a cronjob in background,  can take care more than one tasks (by Ruby Threads), and push the result to different endpoints(stdout, mail, file etc.) with different formats such as xml, json, csv etc. depends on what's you need.

== Installation

gem install notifyme

== Run it

# run in the background

$ notifyme_daemon start --(double dash here) /absolute/path/to/notifyme_config.rb

# debug (use Ctrl + C to stop it)

$ notifyme_daemon run --(double dash here) /absolute/path/to/notifyme_config.rb

# stop

$ notifyme_daemon stop

== Example

== Check HTTP Server (e.g. Nginx)

  require 'socket'

  NotifyMe::Start.config do
    # output to the console
    log :stdout

    # output format is text
    log_format :text

    # define the task 
    task :checking_http_server do |t| 

      # running every 5 seconds
      t.sleep_time = 5 

      # checking command
      t.command = lambda { 
        begin
          TCPSocket.new('localhost', 80) 
          nil 
        rescue Exception => e
          e.to_s
        end 
      }   

      # if the server is not running, the restart_command will be executed
      t.restart_command = lambda { %x{/etc/init.d/nginx start} }
    end 

  end

== Check the "cupsd" process (from "ps -e")

  NotifyMe::Start.config do
    log :stdout
    log_format :json 
    task :checking_cupsd do |t| 
      t.sleep_time = 5 
      t.command = lambda {
        if %x{ps -e}.include? " cupsd"
          nil 
        else
          "Warnning: the process cupsd is not running!"
        end 
      }   
      t.restart_command = lambda {
         `/etc/init.d/cups start`
      }   
    end 
  end

More please check the notifyme_config.rb file.

== Output

The output from every task's command will be processed (send to endpoint) only if the output is not empty, otherwise do nothing.

== Version

v 0.4

== TODO

Add some SPECS
